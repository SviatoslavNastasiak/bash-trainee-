#!/bin/bash

if [[ "$1" == "-v" ]] || [[ "$1" == "-d" ]] || [[ "$1" == "" ]]; then
    path_to_out="$PWD"
else
    path_to_out="$1"
fi

dt=($(date '+%d#%m#%Y %H#%M#%S'))
DATE=${dt[0]}
TIME=${dt[1]}
DUMP_FILE="sysdump-$DATE-$TIME.tar"
SILENT="&>/dev/null"
DRY_RUN=0

TAR=tar

do_command()
{
    local command_name=$(echo $1 | tr " " "-")
    if [ $DRY_RUN -eq 1 ]; then
        echo "$command_name.out"
        return 0
    else
        $1 > "$command_name.out" 2> /dev/null
        if [ $? != 0 ]; then
            echo "Error with $1"
            return
        fi
        eval $TAR -rhf $path_to_out/$DUMP_FILE -C $PWD "$command_name.out" $SILENT
        rm -rf "$command_name.out"
    fi
}


archive_item()
{
    item=$1
    if [[ $DRY_RUN -eq 1 ]]; then
	echo /$item
	return 0
    fi
    mkdir -p $PWD/$(dirname $item)
    cp -RL --parents /$item $PWD/
    eval $TAR -rhf $path_to_out/$DUMP_FILE -C $PWD $item $SILENT
    rm -rf $(echo $item | awk -F "/" '{ print $1}')
}


archive()
{
    archive_item "proc/net"
    archive_item "proc/meminfo"
    archive_item "proc/mounts"
    archive_item "proc/modules"
    archive_item "proc/partitions"
    archive_item "proc/uptime"
    archive_item "var/log/"
    do_command "ip route"
    do_command "ip link"
    do_command "ip -6 route"
    do_command "ifconfig"
    do_command "mount"
    do_command "df"
    do_command "sensors"
    do_command "sysctl -a"
}

while getopts "vd" opt; do
  case $opt in
    v)
        SILENT=""
	    TAR="tar -v"
     ;;
    d)
        DRY_RUN=1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

archive
echo File saved to ${path_to_out}/${DUMP_FILE}

